buildscript {
    ext {
        kotlin_version = '1.5.+'
        serialization_version = '1.0.0'
        kotlin_exposed_version = '0.35.+'
        kotlin_coroutines_version = '1.5.+'
        h2_database_version = '1.4.200' // mvcc support broke in an update (as of 10/2020). until fixed, use this ver
        jvm_target = '1.8'
        junit_version = '5.2.0'
        log4j2_version = '2.16.+'
        protobuf_plugin_version = '0.8.16'
        protobuf_version = '3.15.0'
        grpc_version = '1.37.+'
        grpc_kotlin_version = '1.1.0'
    }

    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath group: 'org.jetbrains.kotlin', name: 'kotlin-gradle-plugin', version: kotlin_version
        classpath group: 'org.jetbrains.kotlin', name: 'kotlin-serialization', version: kotlin_version
        classpath group: 'com.google.protobuf', name: 'protobuf-gradle-plugin', version: protobuf_plugin_version
        classpath group: 'com.ullink.gradle', name: 'gradle-msbuild-plugin', version: '3.12'
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlinx-serialization'
apply plugin: 'com.google.protobuf'
apply plugin: 'com.ullink.msbuild'

allprojects {
    apply plugin: 'kotlin'
    apply plugin: 'kotlinx-serialization'

    group 'net.cydhra'
    version '0.1.0'

    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io/' }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            kotlinOptions.jvmTarget = jvm_target
        }
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:$protobuf_version"
    }

    plugins {
        client {
            artifact = 'com.github.googleapis:gapic-generator-kotlin:master-SNAPSHOT:core@jar'
        }
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:$grpc_version"
        }
        grpckt {
            artifact = "io.grpc:protoc-gen-grpc-kotlin:$grpc_kotlin_version:jdk7@jar"
        }
    }
    generateProtoTasks {
        ofSourceSet("main").forEach {
            it.plugins {
                // generate client side stuff and message builders
                client {
                    option("test-output=build/generated/source/clientTest")
                }

                // generate server API
                grpc {}
                grpckt {}
            }
        }
    }
}

sourceSets {
    main {
        java.srcDirs += "${protobuf.generatedFilesBaseDir}/main/java"
        java.srcDirs += "${protobuf.generatedFilesBaseDir}/main/grpc"
        java.srcDirs += "${protobuf.generatedFilesBaseDir}/main/grpckt"
        java.srcDirs += "${protobuf.generatedFilesBaseDir}/main/client"
    }

    test {
        java.srcDirs += "${project.buildDir}/generated/source/clientTest"
    }
}

// main source set and test
dependencies {
    // kotlin
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-stdlib-jdk8'
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-coroutines-core', version: kotlin_version
    implementation group: 'org.jetbrains.kotlinx', name: 'kotlinx-serialization-protobuf',
            version: serialization_version
    implementation group: 'org.jetbrains.kotlin', name: 'kotlin-reflect', version: kotlin_version

    // modules
    api project(':Bus')
    api project(':Workspace')
    api project(':Features')

    // protobuf
    implementation group: 'com.google.protobuf', name: 'protobuf-java', version: protobuf_version

    // grpc
    implementation group: 'com.github.googleapis.gax-kotlin', name: 'kgax-grpc', version: 'master-SNAPSHOT'
    implementation group: 'io.grpc', name: 'grpc-netty-shaded', version: grpc_version
    implementation group: 'io.grpc', name: 'grpc-services', version: grpc_version
    implementation group: 'io.grpc', name: 'grpc-kotlin-stub', version: grpc_kotlin_version

    // logging
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: log4j2_version
    implementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4j2_version
    implementation group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: log4j2_version

    // argument parsing for CLI
    implementation group: 'com.xenomachina', name: 'kotlin-argparser', version: '2.0.7'

    // testing (mocking required for autogenerated grpc tests)
    testImplementation group: 'org.jetbrains.kotlin', name: 'kotlin-test'
    testImplementation group: 'org.jetbrains.kotlin', name: 'kotlin-test-junit'
    testImplementation group: 'com.nhaarman', name: 'mockito-kotlin', version: '1.6.0'
    testImplementation group: 'org.mockito', name: 'mockito-core', version: '2.23.4'
}

test {
    useJUnit()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

jar {
    manifest {
        attributes "Implementation-Title": project.name,
                "Implementation-Version": project.version,
                "Main-Class": "net.cydhra.acromantula.AcromantulaServiceKt"
    }
}

msbuild {
    solutionFile = 'Gui/Acromantula GUI.sln'

    verbosity = 'detailed'

    targets = ['Rebuild']
}

task runGui(type: Exec) {
    dependsOn(':msbuild')
    group = 'run'

    workingDir 'Gui/Acromantula GUI'
    commandLine 'cmd', '/c', '"bin\\Debug\\Acromantula GUI.exe"'
}
package net.cydhra.acromantula.commands

/**
 * An interpreter for a user command. The interpreter is generated by some kind of frontend (like a CLI, or a RPC
 * server) and then evaluated by the [CommandDispatcherService].
 */
interface WorkspaceCommandInterpreter<T> {

    /**
     * Whether this command interpreter should be executed by the invoking thread or asynchronous. By default, it
     * returns `false`, indicating that the command should be executed concurrently.
     */
    val synchronous: Boolean
        get() = false

    /**
     * Evaluate the command. This function is suspendable and should be launched in a cached thread pool. The
     * function returns a result of the command
     */
    suspend fun evaluate(): T
}
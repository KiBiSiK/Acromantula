syntax = "proto3";

package net.cydhra.acromantula.proto;

import "google/protobuf/empty.proto";

option java_multiple_files = true;

service WorkspaceService {
  rpc listFiles (ListFilesCommand) returns (ListFilesResponse);

  rpc showFile (ShowFileCommand) returns (stream FileChunk);

  rpc createFile(CreateFileCommand) returns (FileEntity);

  rpc replaceFile(ReplaceFileCommand) returns (google.protobuf.Empty);

  rpc deleteFile(DeleteFileCommand) returns (google.protobuf.Empty);
}

message ListFilesCommand {
  oneof fileId {
    int32 id = 1;
    string filePath = 2;
  }
}

message ListFilesResponse {
  repeated FileEntity trees = 1;
}

message FileEntity {
  int32 id = 1;
  string name = 2;
  bool isDirectory = 3;
  repeated FileEntity children = 4;
}

message ViewEntity {
  int32 id = 1;
  string type = 2;
  string url = 3;
}

message ShowFileCommand {
  oneof fileId {
    int32 id = 1;
    string path = 2;
  }

  int32 chunkSize = 3;
}

enum FileTransferStatus {
  /**
  Received file chunk contains data and more chunks will follow
   */
  TRANSFER_STATUS_PROGRESS = 0;

  /**
  Received file chunk may contain data but no more chunks will follow
   */
  TRANSFER_STATUS_FINISHED = 1;

  /**
  File transfer failed. This packet does not contain data.
   */
  TRANSFER_STATUS_CANCELLED = 2;
}

/*
Chunked message for file transfer
 */
message FileChunk {
  FileTransferStatus status = 1;

  /*
  How many bytes the total file contains. This number stays constant for an entire transmission and can be used to
  calculate transmission progress
   */
  int32 totalBytes = 2;
  bytes content = 3;
}

message CreateFileCommand {
  oneof parentId {
    int32 id = 1;
    string path = 2;
  }

  string name = 3;
  bool isDirectory = 4;
}

message ReplaceFileCommand {
  oneof fileId {
    int32 id = 1;
    string path = 2;
  }

  bytes newContent = 3;
}

message DeleteFileCommand {
  oneof fileId {
    int32 id = 1;
    string path = 2;
  }
}